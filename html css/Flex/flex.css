h1{

    background-color: darkcyan;
    color: black;
    padding: 1em;

}

h2{

    background-color: gray;
    color: aqua;

}

h3{

    background-color: lightslategray;
    color: crimson;
    padding: 0.25em;

}

.item1{

    background-color: cornflowerblue;
    width: 80px;
    height: 80px;

}

.item2{

     background-color: aquamarine;
     width: 80px;
     height: 80px;

     flex-basis: 250px;
     /* définit la taille de base d'un élément , la taille sera en pixel  */
}

.item3{

   background-color: blueviolet;
    width: 80px;
    height: 80px;

    order: 1;
    /* Il change l'ordre d'affichage d'un element par rapport au flux web ( insertion par defaut dans HTML ) */

}

.contenu_1{

    border: 1px solid orange;
    height: 200px;
    display: flex;

    flex-direction: column-reverse;
    /* la valeur par defaut est column-reverse , les valeurs possibles(column,row,row-reverse,column-reverse... */

    justify-content: space-around;
     /* la valeur par defaut ici c'est flex-start, les valeurs possibles ici(center,flex-end,flex-start,space-between,space-around)*/

/* space-between:les elements sont réparties sur la totalité de la ligne(l'axe principal qui est definit par flex-direction) 
en creant des espaces entre les elementsspace-around:les elements sont réparties sur la totalité de la ligne en creant des espaces alentours des 
elements center:il va centrer les elements dans le conteneur */

/* align-items permet d'aligner l'element sur l'hauteur du conteneur seulement si l'element n'a pas de height de base(height n'est pas definit) */

    align-items: flex-end;
     /* la valeur par defaut est en flex-start, les valeurs disponibles(flex-end,flex-start,center,stretch,baseline */

}

.contenu_2{

    border: 1px solid rgb(255, 238, 89);
    height: 200px;
    display: flex;

    flex-direction: row;
    /* la valeur par défaut est row , les valeurs possibles (column , row , row-reverse , column-revers  */

    justify-content: center;
    align-items: center;

}

.contenu_3{

    border: 1px solid rgb(255, 0, 0);
    height: 200px;
    display: flex;

    flex-direction: column;
    /* la valeur par défaut est column , les valeurs possibles (column , row , row-reverse , column-reverse */

    justify-content: space-between;

}

.contenu_4{

    border: 1px solid rgb(67, 0, 143);
    height: 200px;
    display: flex;

    flex-direction: row-reverse;
    /* la valeur par défaut est row-reverse , les valeurs possibles (column , row , row-reverse , column-reverse */

    flex-wrap: nowrap;

    /*definit est ce que les elements seront obligatoirement sur une seule ligne ou bien ils ont la possibilites d'etre sur plusieurs ligne
    (cad il ya un retour a la ligne)*/

    /* flex-flow:<flex-direction> || <flex-wrap>;
     on peut conbiner les deux valeurs de flex-direction et flex-wrap dans une seule propriete flex-flow */

    /*align-content il fait la meme chose que align-item si on a plusieurs lignes sur le meme conteneur*/

}




